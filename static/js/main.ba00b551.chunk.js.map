{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","components/Morecolor.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","onChange","event","target","value","backgroundColor","rows","upText","toUpperCase","showAlert","lowerText","toLowerCase","split","length","defaultProps","Alert","role","word","lower","charAt","slice","captia","msg","Morecolor","App","setmode","alert","setAlert","massage","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ba00b551.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        \r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\"> {props.heading}</a>\r\n              </li> */}\r\n               \r\n            </ul> \r\n            <button type=\"button\" className=\"btn btn-danger mx-1\">Danger</button>\r\n            <button type=\"button\" className=\"btn btn-warning mx-1\">Warning</button>\r\n            <button type=\"button\" className=\"btn btn-info mx-1\">Info</button>\r\n           <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n           </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n// To checking the proptypes \r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    heading: PropTypes.string.isRequired\r\n  };\r\n\r\n// Specifies the default values for props:\r\nNavbar.defaultProps = {\r\n    title: 'Stranger',\r\n    heading: 'About us'\r\n  };\r\n","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n   \r\n     \r\n    const handleUpClick = ()=>{\r\n        // console.log('convert to upper case' + text)\r\n        let upText = text.toUpperCase()\r\n        setText(upText)\r\n        props.showAlert(\": UpperCase mode has been enabled\",\"success\")\r\n    }\r\n    const handleLoClick = ()=>{\r\n        // console.log('convert to upper case' + text)\r\n        let lowerText = text.toLowerCase()\r\n        setText(lowerText)\r\n        props.showAlert(\": LowerCase mode has been enabled\",\"success\")\r\n    }\r\n    \r\n    const handleClear = ()=>{\r\n        // console.log('convert to upper case' + text)\r\n        let  clear = \"\"\r\n        setText(clear) \r\n        props.showAlert(\":  All text has been cleared\",\"danger\")\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log('convert to upper case');\r\n        setText(event.target.value);\r\n    }\r\n    const[text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div className= \"container\"  style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n            <div  className=\"mb-3 \"> \r\n                <textarea  className=\"form-control heading\"   onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'#3f4e5c':'white',color:props.mode==='dark'?'white':'black'}} value={text} id=\"MyBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            \r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleClear}>Clear</button>\r\n           \r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}    >\r\n            <h2>Your text length</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p> {0.008 * text.split(\" \").length} Mintes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the text box above to preview it here.\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const captia=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (props.Alert &&\r\n        <div className={`alert alert-${props.Alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{captia(props.Alert.type)}</strong>{props.Alert.msg}  \r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\n\r\nfunction Morecolor() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Morecolor\r\n","// import logo from './logo.svg';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\nimport Morecolor from './components/Morecolor';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route \n// } from \"react-router-dom\"\n \nfunction App() {\n\n//FOR DARK MODE CODE START   \n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (massage,type)=>{\n    setAlert({\n      msg:massage,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode= ()=>{\n    if(mode==='dark'){\n    setmode (\"light\") \n    showAlert(\": Light mode has been enabled\",\"success\")\n    document.body.style.backgroundColor='white';\n  }else \n    {setmode (\"dark\") ;\n    showAlert(\": Dark mode has been enabled\",\"success\")\n    document.body.style.backgroundColor='#0a1b2b';\n    }  \n  } \n  //CODE END\n\n  //FOR RED DARK MODE CODE START\n  // const toggleMode= ()=>{\n  //   if(mode==='5e1319'){\n  //   setmode (\"light\") \n  //   showAlert(\": Light mode has been enabled\",\"success\")\n  //   document.body.style.backgroundColor='white';\n  // }else \n  //   {setmode (\"5e1319\") ;\n  //   showAlert(\": Dark mode has been enabled\",\"success\")\n  //   document.body.style.backgroundColor='#0a1b2b';\n  //   }  \n  // } \n  \n  return (\n  <>\n   {/* <Router> */}\n      <Navbar title=\"TextUtils\"\n              heading = \"About\"\n               mode= {mode}\n               toggleMode = {toggleMode}\n               \n              /> \n      <Morecolor/>        \n      <Alert Alert={alert}/>        \n      <div className=\"container my-3\">\n      {/* <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n         <Route path=\"/\"> */}\n          <Textform heading = \"Enter the text to analyze below\" showAlert={showAlert} mode={mode}/>\n          {/* </Route>\n      </Switch> */}\n      \n        </div> \n          \n        {/* <About/>      */}\n      {/* </Router> */}\n </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}